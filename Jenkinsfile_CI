pipeline {
  environment {
    registry = "mccains/avengers"
    registryCredential = 'dockerhub'
    dockerImage = ''
  }
  agent any
  stages {
    stage('Cloning Git') {
      steps {
        git 'https://github.com/Mc-Cainss/avengers.git'
      }
    }
    stage('Maven Build') {
      steps {
          script{
        def mvnHome = tool 'apache-maven'
        withEnv(["MVN_HOME=$mvnHome"]) {
         if (isUnix()) {
            sh '"$MVN_HOME/bin/mvn" -Dmaven.test.failure.ignore clean package'
         } else {
            bat(/"%MVN_HOME%\bin\mvn" -Dmaven.test.failure.ignore clean package/)
         }
      }
          }
    }
    }
    stage ('Analyse SonarQube'){
    steps{
       sh "mvn sonar:sonar -Dsonar.projectKey=avengers -Dsonar.host.url=http://34.77.225.226:8081/sonar -Dsonar.login=bbd8eb7b0c27762e324e111e8f4a06966c34ede4 -X"
	}  
  }
	stage('Results') {
    steps {
      junit '**/target/surefire-reports/TEST-*.xml'
      archiveArtifacts 'target/surefire-reports/*.txt'
    }
   }
   
   	stage('Scan with Probely') {
    steps {
      probelyScan targetId: '3kGjwap4JncC', credentialsId: 'probely-test-site'
    }
   }
    
    
    stage('Building image') {
      steps{
        script {
          dockerImage = docker.build registry + ":$BUILD_NUMBER"
        }
      }
    }
    stage('Deploy Image') {
      steps{
        script {
          docker.withRegistry( '', registryCredential ) {
            dockerImage.push()
          }
        }
      }
    }
    
    stage ('Invoke_pipeline') {
              steps {
                build job: 'CD-PIPELINE', parameters: [
                string(name: 'param1', value: env.BUILD_NUMBER)
                ]
                }
                
            
        }
    }
    

}
